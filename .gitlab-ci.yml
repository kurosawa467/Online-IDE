image: maven:3.3.9-jdk-8

before_script:
    - cd webserver

after_script:
    - cd webserver

stages:
    - build
    - test
    - package
    - publish
    - deploy

#build jobs
UIServer:build:
    stage: build
    script: cd UIServer / && mvn clean compile
    only:
        changes:
            - UIServer/**/*

compiler:build:
    stage: build
    script: cd compiler / && mvn clean compile
    only:
        changes:
            - compiler/**/*

dark-mode:build:
    stage: build
    script: cd dark-mode / && mvn clean compile
    only:
        changes:
            - dark-mode/**/*

discoveryserver:build:
    stage: build
    script: cd discoveryserver / && mvn clean compile
    only:
        changes:
            - discoveryserver/**/*

gateway:build:
    stage: build
    script: cd gateway / && mvn clean compile -P prod
    only:
        changes:
            - gateway/**/*

project:build:
    stage: build
    script: cd project / && mvn clean compile
    only:
        changes:
            - project/**/*


#test jobs
project:test:
    stage: test
    script: cd project / && mvn test
    services:
        - postgres:9.6
    variables:
        JDBC_URL: jdbc:postgresql://postgres/project_db?user=project_user&password=project_pw
        POSTGRES_DB: project_db
        POSTGRES_PASSWORD: project_pw
        POSTGRES_USER: project_user
    only:
        changes:
            - project/**/*

#package jobs
UIServer:package:
    stage: package
    script: cd UIServer / && mvn package -DskipTests=true
    artifacts:
        paths:
            - UIServer/target/*.jar
    only:
        changes:
            - UIServer/**/*
compiler:package:
    stage: package
    script: cd compiler / && mvn package -DskipTests=true
    artifacts:
        paths:
            - compiler/target/*.jar
    only:
        changes:
            - compiler/**/*
dark-mode:package:
    stage: package
    script: cd dark-mode / && mvn package -DskipTests=true
    artifacts:
        paths:
            - dark-mode/target/*.jar
    only:
        changes:
            - dark-mode/**/*
discoveryserver:package:
    stage: package
    script: cd discoveryserver / && mvn package -DskipTests=true
    artifacts:
        paths:
            - discoveryserver/target/*.jar
    only:
        changes:
            - discoveryserver/**/*
gateway:package:
    stage: package
    script: cd gateway / && mvn package -DskipTests=true 
    artifacts:
        paths:
            - gateway/target/*.jar
    only:
        changes:
            - gateway/**/*
project:package:
    stage: package
    script: cd project / && mvn package -DskipTests=true
    artifacts:
        paths:
            - project/target/*.jar
    only:
        changes:
            - project/**/*       

#publish jobs
UIService:publish:
    stage: publish
    image: docker:stable
    services:
        - name: docker:dind
          entrypoint: ["env", "-u", "DOCKER_HOST"]
          command: ["dockerd-entrypoint.sh"]
    script:
        - cd UIServer/
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $IMAGE_NAME:latest || true
        - docker build --tag $IMAGE_NAME:latest .
        - docker push $IMAGE_NAME:latest
    variables:
        DOCKER_DRIVER: overlay2
        DOCKER_HOST: tcp://docker:2375
        DOCKER_TLS_CERTDIR: ""
        IMAGE_NAME: $CI_REGISTRY_IMAGE/UIService
    only:
       # changes:
       #     - UIServer/**/*
compiler:publish:
    stage: publish
    image: docker:stable
    services:
        - name: docker:dind
          entrypoint: ["env", "-u", "DOCKER_HOST"]
          command: ["dockerd-entrypoint.sh"]
    script:
        - cd compiler/
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $IMAGE_NAME:latest || true
        - docker build --tag $IMAGE_NAME:latest .
        - docker push $IMAGE_NAME:latest
    variables:
        DOCKER_DRIVER: overlay2
        DOCKER_HOST: tcp://docker:2375
        DOCKER_TLS_CERTDIR: ""
        IMAGE_NAME: $CI_REGISTRY_IMAGE/compiler
    only:
      #  changes:
       #     - compiler/**/*
discoveryserver:publish:
    stage: publish
    image: docker:stable
    services:
        - name: docker:dind
          entrypoint: ["env", "-u", "DOCKER_HOST"]
          command: ["dockerd-entrypoint.sh"]
    script:
        - cd discoveryserver/
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $IMAGE_NAME:latest || true
        - docker build --tag $IMAGE_NAME:latest .
        - docker push $IMAGE_NAME:latest
    variables:
        DOCKER_DRIVER: overlay2
        DOCKER_HOST: tcp://docker:2375
        DOCKER_TLS_CERTDIR: ""
        IMAGE_NAME: $CI_REGISTRY_IMAGE/discoveryserver
    only:
       # changes:
       #     - discoveryserver/**/*
project:publish:
    stage: publish
    image: docker:stable
    services:
        - name: docker:dind
          entrypoint: ["env", "-u", "DOCKER_HOST"]
          command: ["dockerd-entrypoint.sh"]
    script:
        - cd project/
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $IMAGE_NAME:latest || true
        - docker build --tag $IMAGE_NAME:latest .
        - docker push $IMAGE_NAME:latest
    variables:
        DOCKER_DRIVER: overlay2
        DOCKER_HOST: tcp://docker:2375
        DOCKER_TLS_CERTDIR: ""
        IMAGE_NAME: $CI_REGISTRY_IMAGE/project
    only:
       # changes:
        #    - project/**/*
dark-mode:publish:
    stage: publish
    image: docker:stable
    services:
        - name: docker:dind
          entrypoint: ["env", "-u", "DOCKER_HOST"]
          command: ["dockerd-entrypoint.sh"]
    script:
        - cd dark-mode/
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker pull $IMAGE_NAME:latest || true
        - docker build --tag $IMAGE_NAME:latest .
        - docker push $IMAGE_NAME:latest
    variables:
        DOCKER_DRIVER: overlay2
        DOCKER_HOST: tcp://docker:2375
        DOCKER_TLS_CERTDIR: ""
        IMAGE_NAME: $CI_REGISTRY_IMAGE/dark-mode
    only:
       # changes:
         #   - dark-mode/**/*


